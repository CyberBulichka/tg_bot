import asyncio
import os 
import sys 
import logging

from aiogram import Bot, Dispatcher, Router
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, ChatJoinRequest
from aiogram import BaseMiddleware
import datetime as dt
from aiogram.enums import ChatType, ContentType
#–Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç apscheduler
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from aiogram import types
from aiogram.methods import GetChatMember

import app.keyboards as kb
from app.handlers import router

#–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ç–µ–ªe–≥—Ä–∞–º —Ç–æ–∫–µ–Ω
TOKEN = '6809644257:AAHqH8eW6YtJ-8UE_IdIPr-G_zMtc_DMst0'



## –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ—Å—Ç–∞–≤–∞—Ç—å scheduler –∏–∑ –∞–≥—Ä—É–º–µ–Ω—Ç–æ–≤ —Ñ—É–Ω—Ü–∏–∏
class SchedulerMiddleware(BaseMiddleware):
    def __init__(self, scheduler: AsyncIOScheduler):
        super().__init__()
        self._scheduler = scheduler

    async def __call__(self,handler,event,data):
        # –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å —Å–æ—Å—Ç–æ—è–Ω–∏—è scheduler
        data["scheduler"] = self._scheduler
        return await handler(event, data)



@router.message(Command(commands=["start"]))
# middleware –ø—Ä–æ—Å–æ–≤—ã–≤–∞–µ—Ç –¥–ª—è –Ω–∞—Å sheduler –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ 
async def hello(message:Message, bot: Bot, scheduler: AsyncIOScheduler):
    # –ø–æ–ª—É—á–∞–µ–º id, –æ–±—Ä–∞—Ç–∏–≤—à–µ–≥–æ—Å—è –∫ –±–æ—Ç—É
    id = message.from_user.id
    user_channel_status = await bot.get_chat_member(chat_id='-1002105665067', user_id=id)
    if user_channel_status.status != 'left':
        await message.answer_photo(photo='AgACAgIAAxkBAAPTZhlH8TKe7JAfwgUd75SUFGNyb6MAAg7YMRvTcslILq8PLuEOFQcBAAMCAAN4AAM0BA', caption='Congratulations, my friend ' + str(message.from_user.first_name) + '!ü•á\n\n'
                               f'Finally you found a real Guru!üòå\n'
                               f'I will teach you how to make money just playing simple slot games. \n\n'
                               f'<b>Subscribe</b> to <b>my channel</b> to find out how to make money\n'
                               f'If you want to earn money right now, press STARTüëáüèº', parse_mode='html',disable_web_page_preview=1,
                               reply_markup=kb.main)
    else:
        await bot.send_message(message.from_user.id, '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –ø–æ —Å—Å—ã–ª–∫–µ https://t.me/+6K2Do5ZHIQoxOGJi')
    



# async def send_message_to_subscribers(bot: Bot, channel_id: str, message_text: str):
#     # –°–æ–∑–¥–∞–π—Ç–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—ä–µ–∫—Ç–∞ GetChatMember, —É–∫–∞–∑–∞–≤ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     get_chat_member = GetChatMember(chat_id='-1002105665067', user_id=member_id)
#     # –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä Telegram, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —á–∞—Ç–µ
#     chat_member = await bot.get_chat_member(chat_id=get_chat_member.chat_id, user_id=get_chat_member.user_id)
#     # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–∞–Ω–∞–ª–∞
#     members_count = await bot.get_chat_members_count(channel_id)
#     for member_id in range(members_count):
#         try:
#             # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–µ
#             member = await bot.get_chat_member(channel_id, member_id)
#             # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∞ –Ω–µ –±–æ—Ç –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ç–∏–ø —É—á–∞—Å—Ç–Ω–∏–∫–∞
#             if member.user:
#                 # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–æ–¥–ø–∏—Å—á–∏–∫—É
#                 await bot.send_message(member.user.id, message_text)
#         except Exception as e:
#             # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è
#             print(f"Error sending message to {member.user.id}: {e}")

async def main():
    # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–µ–º –Ω—É–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å. –ü–æ –¥–µ—Ñ–æ–ª—Ç—É –õ–æ–Ω–¥–æ–Ω :)
    scheduler = AsyncIOScheduler(timezone='Europe/Moscow')
    scheduler.start()
    bot = Bot(TOKEN, parse_mode=ParseMode.HTML)
    dp = Dispatcher()
    dp.include_routers(router)
    # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º middleware c scheduler
    dp.update.middleware(
        SchedulerMiddleware(scheduler=scheduler),
    )
    
    # await send_message_to_subscribers(
    # bot,
    # channel_id='-1002105665067',  # ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
    # message_text='–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–∞–º –∏–∑ –±–æ—Ç–∞.'
    # )
    
    await dp.start_polling(bot)



if __name__ == '__main__':
    logging.basicConfig(
        level=logging.INFO,
        stream=sys.stdout,
        format="%(asctime)s - [%(levelname)s] -  %(name)s - "
                                "(%(filename)s).%(funcName)s(%(lineno)d) - %(message)s"
    )
    asyncio.run(main())
